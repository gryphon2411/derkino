# Migration tasks for zero-downtime infrastructure migration
# This role handles the transition from kubectl manifests to Helm charts

- name: Check if kubectl infrastructure exists
  ansible.builtin.command: kubectl get deployments,statefulsets -n {{ migration_infrastructure_namespace }} -o name
  register: migration_existing_infrastructure
  failed_when: false
  changed_when: false

- name: Deploy Helm infrastructure in parallel (if kubectl infrastructure exists)
  ansible.builtin.command: >
    helm upgrade --install {{ item }} derkino-infrastructure/{{ item }}
    --namespace {{ migration_parallel_namespace }} --create-namespace
    --values {{ migration_helm_charts_path }}/charts/{{ item }}/values.yaml
  with_items:
    - mongodb
    - postgresql
    - redis-stack
    - kafka
  when: migration_existing_infrastructure.stdout != ""
  changed_when: false

- name: Wait for parallel infrastructure to be ready
  ansible.builtin.command: kubectl wait --for=condition=ready pod -l app={{ item }} --namespace {{ migration_parallel_namespace }} --timeout=300s
  with_items:
    - mongodb
    - postgresql
    - redis-stack
    - kafka
  when: migration_existing_infrastructure.stdout != ""
  changed_when: false

- name: Test connectivity to parallel infrastructure
  ansible.builtin.command: echo "Testing connectivity to {{ item }} in parallel namespace"
  with_items:
    - mongodb
    - postgresql
    - redis-stack
    - kafka
  when: existing_infrastructure is defined and existing_infrastructure.stdout != ""
  changed_when: false

- name: Switch traffic to Helm infrastructure
  ansible.builtin.command: kubectl patch service {{ item }} -n infrastructure --patch-file {{ migration_patches_path }}/{{ item }}-patch.yaml
  with_items:
    - mongodb
    - postgresql
    - redis-stack
    - kafka
  when: existing_infrastructure is defined and existing_infrastructure.stdout != ""
  changed_when: false

- name: Remove kubectl infrastructure (after successful migration)
  ansible.builtin.command: kubectl delete -f {{ kubectl_manifests_path }}/{{ item }}.yaml
  with_items:
    - mongodb
    - postgresql
    - redis-stack
    - kafka
  when: existing_infrastructure is defined and existing_infrastructure.stdout != "" and migration_complete.rc == 0
  changed_when: false
