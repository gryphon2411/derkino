# Main tasks for Helm role
# Deploys infrastructure components using Helm charts

- name: Ensure Helm is available
  ansible.builtin.command: helm version
  register: helm_version_result
  failed_when: helm_version_result.rc != 0
  changed_when: false

- name: Add derkino-infrastructure Helm repository
  ansible.builtin.command: helm repo add derkino-infrastructure {{ helm_charts_path }}
  args:
    creates: "{{ helm_cache_dir }}/repository/derkino-infrastructure-index.yaml"

- name: Update Helm repository cache
  ansible.builtin.command: helm repo update derkino-infrastructure
  changed_when: false

- name: Deploy MongoDB via Helm
  block:
    - name: Install/Upgrade MongoDB
      ansible.builtin.command: >
        helm upgrade --install mongodb derkino-infrastructure/mongodb
        --namespace {{ helm_infrastructure_namespace }} --create-namespace
        --values {{ helm_charts_path }}/charts/mongodb/values.yaml
      notify:
        - wait for mongodb
        - test mongodb connectivity
      changed_when: false

  rescue:
    - name: Rollback MongoDB deployment
      ansible.builtin.command: >
        helm uninstall mongodb --namespace {{ helm_infrastructure_namespace }}
      register: helm_mongodb_rollback_result
      changed_when: false
      ignore_errors: true

    - name: Notify MongoDB rollback status
      ansible.builtin.debug:
        msg: "MongoDB deployment failed. Rollback status: {{ helm_mongodb_rollback_result.rc == 0 | ternary('Successful', 'Failed') }}"
      changed_when: false

- name: Deploy PostgreSQL via Helm
  block:
    - name: Install/Upgrade PostgreSQL
      ansible.builtin.command: >
        helm upgrade --install postgresql derkino-infrastructure/postgresql
        --namespace {{ helm_infrastructure_namespace }} --create-namespace
        --values {{ helm_charts_path }}/charts/postgresql/values.yaml
      notify:
        - wait for postgresql
        - test postgresql connectivity
      changed_when: false

  rescue:
    - name: Rollback PostgreSQL deployment
      ansible.builtin.command: >
        helm uninstall postgresql --namespace {{ helm_infrastructure_namespace }}
      register: helm_postgresql_rollback_result
      changed_when: false
      ignore_errors: true

    - name: Notify PostgreSQL rollback status
      ansible.builtin.debug:
        msg: "PostgreSQL deployment failed. Rollback status: {{ helm_postgresql_rollback_result.rc == 0 | ternary('Successful', 'Failed') }}"
      changed_when: false

- name: Deploy Redis-Stack via Helm
  block:
    - name: Install/Upgrade Redis-Stack
      ansible.builtin.command: >
        helm upgrade --install redis-stack derkino-infrastructure/redis-stack
        --namespace {{ helm_infrastructure_namespace }} --create-namespace
        --values {{ helm_charts_path }}/charts/redis-stack/values.yaml
      notify:
        - wait for redis-stack
        - test redis connectivity
      changed_when: false

  rescue:
    - name: Rollback Redis-Stack deployment
      ansible.builtin.command: >
        helm uninstall redis-stack --namespace {{ helm_infrastructure_namespace }}
      register: helm_redis_stack_rollback_result
      changed_when: false
      ignore_errors: true

    - name: Notify Redis-Stack rollback status
      ansible.builtin.debug:
        msg: "Redis-Stack deployment failed. Rollback status: {{ helm_redis_stack_rollback_result.rc == 0 | ternary('Successful', 'Failed') }}"
      changed_when: false

- name: Deploy Kafka via Helm
  block:
    - name: Install/Upgrade Kafka
      ansible.builtin.command: >
        helm upgrade --install kafka derkino-infrastructure/kafka
        --namespace {{ helm_infrastructure_namespace }} --create-namespace
        --values {{ helm_charts_path }}/charts/kafka/values.yaml
      notify:
        - wait for kafka
        - test kafka connectivity
      changed_when: false

  rescue:
    - name: Rollback Kafka deployment
      ansible.builtin.command: >
        helm uninstall kafka --namespace {{ helm_infrastructure_namespace }}
      register: helm_kafka_rollback_result
      changed_when: false
      ignore_errors: true

    - name: Notify Kafka rollback status
      ansible.builtin.debug:
        msg: "Kafka deployment failed. Rollback status: {{ helm_kafka_rollback_result.rc == 0 | ternary('Successful', 'Failed') }}"
      changed_when: false
